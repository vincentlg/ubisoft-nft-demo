/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers'
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from '../common'

export declare namespace IRentalProtocol {
  export type NFTStruct = {
    token: string
    tokenId: BigNumberish
    duration: BigNumberish
    basisPoints: BigNumberish
  }

  export type NFTStructOutput = [string, BigNumber, BigNumber, number] & {
    token: string
    tokenId: BigNumber
    duration: BigNumber
    basisPoints: number
  }

  export type FeeStruct = { to: string; basisPoints: BigNumberish }

  export type FeeStructOutput = [string, BigNumber] & {
    to: string
    basisPoints: BigNumber
  }

  export type RentalOfferStruct = {
    maker: string
    taker: string
    nfts: IRentalProtocol.NFTStruct[]
    feeToken: string
    feeAmount: BigNumberish
    nonce: BigNumberish
    deadline: BigNumberish
  }

  export type RentalOfferStructOutput = [
    string,
    string,
    IRentalProtocol.NFTStructOutput[],
    string,
    BigNumber,
    BigNumber,
    BigNumber,
  ] & {
    maker: string
    taker: string
    nfts: IRentalProtocol.NFTStructOutput[]
    feeToken: string
    feeAmount: BigNumber
    nonce: BigNumber
    deadline: BigNumber
  }
}

export interface RentalProtocolInterface extends utils.Interface {
  functions: {
    'DEFAULT_ADMIN_ROLE()': FunctionFragment
    'FEES_MANAGER_ROLE()': FunctionFragment
    'MAX_BASIS_POINTS()': FunctionFragment
    'PAUSER_ROLE()': FunctionFragment
    'SIGNATURE_VERSION()': FunctionFragment
    'SIGNING_DOMAIN()': FunctionFragment
    'TOKENS_MANAGER_ROLE()': FunctionFragment
    'associateOriginalToLentAndBorrowedNFT(address,address,address,address)': FunctionFragment
    'cancelRentalOffer(uint256)': FunctionFragment
    'endRental(address,uint256)': FunctionFragment
    'endRentalPrematurely(address,uint256)': FunctionFragment
    'endRentalPrematurelyRequests(address,uint256)': FunctionFragment
    'endSublet(address,uint256)': FunctionFragment
    'feesCollector()': FunctionFragment
    'getFeesTable(address,uint256)': FunctionFragment
    'getRoleAdmin(bytes32)': FunctionFragment
    'grantRole(bytes32,address)': FunctionFragment
    'hasRole(bytes32,address)': FunctionFragment
    'hashRentalOffer((address,address,(address,uint256,uint64,uint16)[],address,uint256,uint256,uint256))': FunctionFragment
    'initialize(address,uint16)': FunctionFragment
    'invalidNonce(address,uint256)': FunctionFragment
    'onERC721Received(address,address,uint256,bytes)': FunctionFragment
    'originalToBorrowedNFT(address)': FunctionFragment
    'originalToLentNFT(address)': FunctionFragment
    'originalToSubLendNFT(address)': FunctionFragment
    'pause()': FunctionFragment
    'paused()': FunctionFragment
    'preSignRentalOffer((address,address,(address,uint256,uint64,uint16)[],address,uint256,uint256,uint256))': FunctionFragment
    'preSignedOffer(bytes32)': FunctionFragment
    'protocolFeeBasisPoints()': FunctionFragment
    'renounceRole(bytes32,address)': FunctionFragment
    'rent((address,address,(address,uint256,uint64,uint16)[],address,uint256,uint256,uint256),uint8,bytes)': FunctionFragment
    'rentals(address,uint256)': FunctionFragment
    'revokeRole(bytes32,address)': FunctionFragment
    'setFeesBasisPoints(uint16)': FunctionFragment
    'setFeesCollector(address)': FunctionFragment
    'sublet(address,uint256,address,uint16)': FunctionFragment
    'supportsInterface(bytes4)': FunctionFragment
    'unpause()': FunctionFragment
  }

  getFunction(
    nameOrSignatureOrTopic:
      | 'DEFAULT_ADMIN_ROLE'
      | 'FEES_MANAGER_ROLE'
      | 'MAX_BASIS_POINTS'
      | 'PAUSER_ROLE'
      | 'SIGNATURE_VERSION'
      | 'SIGNING_DOMAIN'
      | 'TOKENS_MANAGER_ROLE'
      | 'associateOriginalToLentAndBorrowedNFT'
      | 'cancelRentalOffer'
      | 'endRental'
      | 'endRentalPrematurely'
      | 'endRentalPrematurelyRequests'
      | 'endSublet'
      | 'feesCollector'
      | 'getFeesTable'
      | 'getRoleAdmin'
      | 'grantRole'
      | 'hasRole'
      | 'hashRentalOffer'
      | 'initialize'
      | 'invalidNonce'
      | 'onERC721Received'
      | 'originalToBorrowedNFT'
      | 'originalToLentNFT'
      | 'originalToSubLendNFT'
      | 'pause'
      | 'paused'
      | 'preSignRentalOffer'
      | 'preSignedOffer'
      | 'protocolFeeBasisPoints'
      | 'renounceRole'
      | 'rent'
      | 'rentals'
      | 'revokeRole'
      | 'setFeesBasisPoints'
      | 'setFeesCollector'
      | 'sublet'
      | 'supportsInterface'
      | 'unpause',
  ): FunctionFragment

  encodeFunctionData(
    functionFragment: 'DEFAULT_ADMIN_ROLE',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'FEES_MANAGER_ROLE',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'MAX_BASIS_POINTS',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'PAUSER_ROLE',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'SIGNATURE_VERSION',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'SIGNING_DOMAIN',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'TOKENS_MANAGER_ROLE',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'associateOriginalToLentAndBorrowedNFT',
    values: [string, string, string, string],
  ): string
  encodeFunctionData(
    functionFragment: 'cancelRentalOffer',
    values: [BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'endRental',
    values: [string, BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'endRentalPrematurely',
    values: [string, BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'endRentalPrematurelyRequests',
    values: [string, BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'endSublet',
    values: [string, BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'feesCollector',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'getFeesTable',
    values: [string, BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'getRoleAdmin',
    values: [BytesLike],
  ): string
  encodeFunctionData(
    functionFragment: 'grantRole',
    values: [BytesLike, string],
  ): string
  encodeFunctionData(
    functionFragment: 'hasRole',
    values: [BytesLike, string],
  ): string
  encodeFunctionData(
    functionFragment: 'hashRentalOffer',
    values: [IRentalProtocol.RentalOfferStruct],
  ): string
  encodeFunctionData(
    functionFragment: 'initialize',
    values: [string, BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'invalidNonce',
    values: [string, BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'onERC721Received',
    values: [string, string, BigNumberish, BytesLike],
  ): string
  encodeFunctionData(
    functionFragment: 'originalToBorrowedNFT',
    values: [string],
  ): string
  encodeFunctionData(
    functionFragment: 'originalToLentNFT',
    values: [string],
  ): string
  encodeFunctionData(
    functionFragment: 'originalToSubLendNFT',
    values: [string],
  ): string
  encodeFunctionData(functionFragment: 'pause', values?: undefined): string
  encodeFunctionData(functionFragment: 'paused', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'preSignRentalOffer',
    values: [IRentalProtocol.RentalOfferStruct],
  ): string
  encodeFunctionData(
    functionFragment: 'preSignedOffer',
    values: [BytesLike],
  ): string
  encodeFunctionData(
    functionFragment: 'protocolFeeBasisPoints',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'renounceRole',
    values: [BytesLike, string],
  ): string
  encodeFunctionData(
    functionFragment: 'rent',
    values: [IRentalProtocol.RentalOfferStruct, BigNumberish, BytesLike],
  ): string
  encodeFunctionData(
    functionFragment: 'rentals',
    values: [string, BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'revokeRole',
    values: [BytesLike, string],
  ): string
  encodeFunctionData(
    functionFragment: 'setFeesBasisPoints',
    values: [BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'setFeesCollector',
    values: [string],
  ): string
  encodeFunctionData(
    functionFragment: 'sublet',
    values: [string, BigNumberish, string, BigNumberish],
  ): string
  encodeFunctionData(
    functionFragment: 'supportsInterface',
    values: [BytesLike],
  ): string
  encodeFunctionData(functionFragment: 'unpause', values?: undefined): string

  decodeFunctionResult(
    functionFragment: 'DEFAULT_ADMIN_ROLE',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'FEES_MANAGER_ROLE',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'MAX_BASIS_POINTS',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'PAUSER_ROLE', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'SIGNATURE_VERSION',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'SIGNING_DOMAIN',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'TOKENS_MANAGER_ROLE',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'associateOriginalToLentAndBorrowedNFT',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'cancelRentalOffer',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'endRental', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'endRentalPrematurely',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'endRentalPrematurelyRequests',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'endSublet', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'feesCollector',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'getFeesTable',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'getRoleAdmin',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'grantRole', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'hasRole', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'hashRentalOffer',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'invalidNonce',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'onERC721Received',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'originalToBorrowedNFT',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'originalToLentNFT',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'originalToSubLendNFT',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'pause', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'paused', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'preSignRentalOffer',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'preSignedOffer',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'protocolFeeBasisPoints',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'renounceRole',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'rent', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'rentals', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'revokeRole', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'setFeesBasisPoints',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'setFeesCollector',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'sublet', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'supportsInterface',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'unpause', data: BytesLike): Result

  events: {
    'AssociatedNFTs(address,address,address,address)': EventFragment
    'FeesBasisPointsChanged(uint16)': EventFragment
    'FeesCollectorChanged(address)': EventFragment
    'Initialized(uint8)': EventFragment
    'Paused(address)': EventFragment
    'RentalEnded(address,address,address,uint256)': EventFragment
    'RentalOfferCancelled(uint256,address)': EventFragment
    'RentalOfferCreated(uint256,address,address,tuple[],address,uint256,uint256)': EventFragment
    'RentalStarted(uint256,address,address,address,uint256,uint64,uint16,uint256,uint256)': EventFragment
    'RequestToEndRentalPrematurely(address,address,uint256)': EventFragment
    'RoleAdminChanged(bytes32,bytes32,bytes32)': EventFragment
    'RoleGranted(bytes32,address,address)': EventFragment
    'RoleRevoked(bytes32,address,address)': EventFragment
    'SubletEnded(address,address,address,uint256)': EventFragment
    'SubletStarted(address,address,address,uint256,uint16)': EventFragment
    'Unpaused(address)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'AssociatedNFTs'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'FeesBasisPointsChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'FeesCollectorChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Initialized'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Paused'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'RentalEnded'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'RentalOfferCancelled'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'RentalOfferCreated'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'RentalStarted'): EventFragment
  getEvent(
    nameOrSignatureOrTopic: 'RequestToEndRentalPrematurely',
  ): EventFragment
  getEvent(nameOrSignatureOrTopic: 'RoleAdminChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'RoleGranted'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'RoleRevoked'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'SubletEnded'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'SubletStarted'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Unpaused'): EventFragment
}

export interface AssociatedNFTsEventObject {
  originalNFT: string
  lentNFT: string
  borrowedNFT: string
  subLentNFT: string
}
export type AssociatedNFTsEvent = TypedEvent<
  [string, string, string, string],
  AssociatedNFTsEventObject
>

export type AssociatedNFTsEventFilter = TypedEventFilter<AssociatedNFTsEvent>

export interface FeesBasisPointsChangedEventObject {
  basisPoints: number
}
export type FeesBasisPointsChangedEvent = TypedEvent<
  [number],
  FeesBasisPointsChangedEventObject
>

export type FeesBasisPointsChangedEventFilter =
  TypedEventFilter<FeesBasisPointsChangedEvent>

export interface FeesCollectorChangedEventObject {
  feeCollector: string
}
export type FeesCollectorChangedEvent = TypedEvent<
  [string],
  FeesCollectorChangedEventObject
>

export type FeesCollectorChangedEventFilter =
  TypedEventFilter<FeesCollectorChangedEvent>

export interface InitializedEventObject {
  version: number
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>

export interface PausedEventObject {
  account: string
}
export type PausedEvent = TypedEvent<[string], PausedEventObject>

export type PausedEventFilter = TypedEventFilter<PausedEvent>

export interface RentalEndedEventObject {
  lender: string
  tenant: string
  token: string
  tokenId: BigNumber
}
export type RentalEndedEvent = TypedEvent<
  [string, string, string, BigNumber],
  RentalEndedEventObject
>

export type RentalEndedEventFilter = TypedEventFilter<RentalEndedEvent>

export interface RentalOfferCancelledEventObject {
  nonce: BigNumber
  maker: string
}
export type RentalOfferCancelledEvent = TypedEvent<
  [BigNumber, string],
  RentalOfferCancelledEventObject
>

export type RentalOfferCancelledEventFilter =
  TypedEventFilter<RentalOfferCancelledEvent>

export interface RentalOfferCreatedEventObject {
  nonce: BigNumber
  maker: string
  taker: string
  nfts: IRentalProtocol.NFTStructOutput[]
  feeToken: string
  feeAmount: BigNumber
  deadline: BigNumber
}
export type RentalOfferCreatedEvent = TypedEvent<
  [
    BigNumber,
    string,
    string,
    IRentalProtocol.NFTStructOutput[],
    string,
    BigNumber,
    BigNumber,
  ],
  RentalOfferCreatedEventObject
>

export type RentalOfferCreatedEventFilter =
  TypedEventFilter<RentalOfferCreatedEvent>

export interface RentalStartedEventObject {
  nonce: BigNumber
  lender: string
  tenant: string
  token: string
  tokenId: BigNumber
  duration: BigNumber
  basisPoints: number
  start: BigNumber
  end: BigNumber
}
export type RentalStartedEvent = TypedEvent<
  [
    BigNumber,
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    number,
    BigNumber,
    BigNumber,
  ],
  RentalStartedEventObject
>

export type RentalStartedEventFilter = TypedEventFilter<RentalStartedEvent>

export interface RequestToEndRentalPrematurelyEventObject {
  requester: string
  token: string
  tokenId: BigNumber
}
export type RequestToEndRentalPrematurelyEvent = TypedEvent<
  [string, string, BigNumber],
  RequestToEndRentalPrematurelyEventObject
>

export type RequestToEndRentalPrematurelyEventFilter =
  TypedEventFilter<RequestToEndRentalPrematurelyEvent>

export interface RoleAdminChangedEventObject {
  role: string
  previousAdminRole: string
  newAdminRole: string
}
export type RoleAdminChangedEvent = TypedEvent<
  [string, string, string],
  RoleAdminChangedEventObject
>

export type RoleAdminChangedEventFilter =
  TypedEventFilter<RoleAdminChangedEvent>

export interface RoleGrantedEventObject {
  role: string
  account: string
  sender: string
}
export type RoleGrantedEvent = TypedEvent<
  [string, string, string],
  RoleGrantedEventObject
>

export type RoleGrantedEventFilter = TypedEventFilter<RoleGrantedEvent>

export interface RoleRevokedEventObject {
  role: string
  account: string
  sender: string
}
export type RoleRevokedEvent = TypedEvent<
  [string, string, string],
  RoleRevokedEventObject
>

export type RoleRevokedEventFilter = TypedEventFilter<RoleRevokedEvent>

export interface SubletEndedEventObject {
  lender: string
  tenant: string
  token: string
  tokenId: BigNumber
}
export type SubletEndedEvent = TypedEvent<
  [string, string, string, BigNumber],
  SubletEndedEventObject
>

export type SubletEndedEventFilter = TypedEventFilter<SubletEndedEvent>

export interface SubletStartedEventObject {
  lender: string
  tenant: string
  token: string
  tokenId: BigNumber
  basisPoints: number
}
export type SubletStartedEvent = TypedEvent<
  [string, string, string, BigNumber, number],
  SubletStartedEventObject
>

export type SubletStartedEventFilter = TypedEventFilter<SubletStartedEvent>

export interface UnpausedEventObject {
  account: string
}
export type UnpausedEvent = TypedEvent<[string], UnpausedEventObject>

export type UnpausedEventFilter = TypedEventFilter<UnpausedEvent>

export interface RentalProtocol extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  interface: RentalProtocolInterface

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>
  listeners(eventName?: string): Array<Listener>
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this
  removeAllListeners(eventName?: string): this
  off: OnEvent<this>
  on: OnEvent<this>
  once: OnEvent<this>
  removeListener: OnEvent<this>

  functions: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>

    FEES_MANAGER_ROLE(overrides?: CallOverrides): Promise<[string]>

    MAX_BASIS_POINTS(overrides?: CallOverrides): Promise<[number]>

    PAUSER_ROLE(overrides?: CallOverrides): Promise<[string]>

    SIGNATURE_VERSION(overrides?: CallOverrides): Promise<[string]>

    SIGNING_DOMAIN(overrides?: CallOverrides): Promise<[string]>

    TOKENS_MANAGER_ROLE(overrides?: CallOverrides): Promise<[string]>

    associateOriginalToLentAndBorrowedNFT(
      originalNFT: string,
      lentNFT: string,
      borrowedNFT: string,
      subLentNFT: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    cancelRentalOffer(
      nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    endRental(
      token: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    endRentalPrematurely(
      token: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    endRentalPrematurelyRequests(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[string]>

    endSublet(
      token: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    feesCollector(overrides?: CallOverrides): Promise<[string]>

    getFeesTable(
      token: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[IRentalProtocol.FeeStructOutput[]]>

    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<[string]>

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides,
    ): Promise<[boolean]>

    hashRentalOffer(
      offer: IRentalProtocol.RentalOfferStruct,
      overrides?: CallOverrides,
    ): Promise<[string]>

    initialize(
      _feesCollector: string,
      feesBasisPoints: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    invalidNonce(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[boolean]>

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    originalToBorrowedNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<[string]>

    originalToLentNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<[string]>

    originalToSubLendNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<[string]>

    pause(
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    paused(overrides?: CallOverrides): Promise<[boolean]>

    preSignRentalOffer(
      offer: IRentalProtocol.RentalOfferStruct,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    preSignedOffer(
      arg0: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[boolean]>

    protocolFeeBasisPoints(overrides?: CallOverrides): Promise<[number]>

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    rent(
      offer: IRentalProtocol.RentalOfferStruct,
      signatureType: BigNumberish,
      signature: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    rentals(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        end: BigNumber
        lenderFee: BigNumber
        sublenderFee: BigNumber
      }
    >

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    setFeesBasisPoints(
      basisPoints: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    setFeesCollector(
      _feesCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    sublet(
      token: string,
      tokenId: BigNumberish,
      subtenant: string,
      basisPoints: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[boolean]>

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>
  }

  DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>

  FEES_MANAGER_ROLE(overrides?: CallOverrides): Promise<string>

  MAX_BASIS_POINTS(overrides?: CallOverrides): Promise<number>

  PAUSER_ROLE(overrides?: CallOverrides): Promise<string>

  SIGNATURE_VERSION(overrides?: CallOverrides): Promise<string>

  SIGNING_DOMAIN(overrides?: CallOverrides): Promise<string>

  TOKENS_MANAGER_ROLE(overrides?: CallOverrides): Promise<string>

  associateOriginalToLentAndBorrowedNFT(
    originalNFT: string,
    lentNFT: string,
    borrowedNFT: string,
    subLentNFT: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  cancelRentalOffer(
    nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  endRental(
    token: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  endRentalPrematurely(
    token: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  endRentalPrematurelyRequests(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<string>

  endSublet(
    token: string,
    tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  feesCollector(overrides?: CallOverrides): Promise<string>

  getFeesTable(
    token: string,
    tokenId: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<IRentalProtocol.FeeStructOutput[]>

  getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>

  grantRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  hasRole(
    role: BytesLike,
    account: string,
    overrides?: CallOverrides,
  ): Promise<boolean>

  hashRentalOffer(
    offer: IRentalProtocol.RentalOfferStruct,
    overrides?: CallOverrides,
  ): Promise<string>

  initialize(
    _feesCollector: string,
    feesBasisPoints: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  invalidNonce(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<boolean>

  onERC721Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  originalToBorrowedNFT(
    arg0: string,
    overrides?: CallOverrides,
  ): Promise<string>

  originalToLentNFT(arg0: string, overrides?: CallOverrides): Promise<string>

  originalToSubLendNFT(arg0: string, overrides?: CallOverrides): Promise<string>

  pause(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  paused(overrides?: CallOverrides): Promise<boolean>

  preSignRentalOffer(
    offer: IRentalProtocol.RentalOfferStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  preSignedOffer(arg0: BytesLike, overrides?: CallOverrides): Promise<boolean>

  protocolFeeBasisPoints(overrides?: CallOverrides): Promise<number>

  renounceRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  rent(
    offer: IRentalProtocol.RentalOfferStruct,
    signatureType: BigNumberish,
    signature: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  rentals(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      end: BigNumber
      lenderFee: BigNumber
      sublenderFee: BigNumber
    }
  >

  revokeRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  setFeesBasisPoints(
    basisPoints: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  setFeesCollector(
    _feesCollector: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  sublet(
    token: string,
    tokenId: BigNumberish,
    subtenant: string,
    basisPoints: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides,
  ): Promise<boolean>

  unpause(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>

  callStatic: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>

    FEES_MANAGER_ROLE(overrides?: CallOverrides): Promise<string>

    MAX_BASIS_POINTS(overrides?: CallOverrides): Promise<number>

    PAUSER_ROLE(overrides?: CallOverrides): Promise<string>

    SIGNATURE_VERSION(overrides?: CallOverrides): Promise<string>

    SIGNING_DOMAIN(overrides?: CallOverrides): Promise<string>

    TOKENS_MANAGER_ROLE(overrides?: CallOverrides): Promise<string>

    associateOriginalToLentAndBorrowedNFT(
      originalNFT: string,
      lentNFT: string,
      borrowedNFT: string,
      subLentNFT: string,
      overrides?: CallOverrides,
    ): Promise<void>

    cancelRentalOffer(
      nonce: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>

    endRental(
      token: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>

    endRentalPrematurely(
      token: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>

    endRentalPrematurelyRequests(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<string>

    endSublet(
      token: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>

    feesCollector(overrides?: CallOverrides): Promise<string>

    getFeesTable(
      token: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<IRentalProtocol.FeeStructOutput[]>

    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides,
    ): Promise<void>

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides,
    ): Promise<boolean>

    hashRentalOffer(
      offer: IRentalProtocol.RentalOfferStruct,
      overrides?: CallOverrides,
    ): Promise<string>

    initialize(
      _feesCollector: string,
      feesBasisPoints: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>

    invalidNonce(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<boolean>

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string>

    originalToBorrowedNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<string>

    originalToLentNFT(arg0: string, overrides?: CallOverrides): Promise<string>

    originalToSubLendNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<string>

    pause(overrides?: CallOverrides): Promise<void>

    paused(overrides?: CallOverrides): Promise<boolean>

    preSignRentalOffer(
      offer: IRentalProtocol.RentalOfferStruct,
      overrides?: CallOverrides,
    ): Promise<void>

    preSignedOffer(arg0: BytesLike, overrides?: CallOverrides): Promise<boolean>

    protocolFeeBasisPoints(overrides?: CallOverrides): Promise<number>

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides,
    ): Promise<void>

    rent(
      offer: IRentalProtocol.RentalOfferStruct,
      signatureType: BigNumberish,
      signature: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>

    rentals(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        end: BigNumber
        lenderFee: BigNumber
        sublenderFee: BigNumber
      }
    >

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides,
    ): Promise<void>

    setFeesBasisPoints(
      basisPoints: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>

    setFeesCollector(
      _feesCollector: string,
      overrides?: CallOverrides,
    ): Promise<void>

    sublet(
      token: string,
      tokenId: BigNumberish,
      subtenant: string,
      basisPoints: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<boolean>

    unpause(overrides?: CallOverrides): Promise<void>
  }

  filters: {
    'AssociatedNFTs(address,address,address,address)'(
      originalNFT?: null,
      lentNFT?: null,
      borrowedNFT?: null,
      subLentNFT?: null,
    ): AssociatedNFTsEventFilter
    AssociatedNFTs(
      originalNFT?: null,
      lentNFT?: null,
      borrowedNFT?: null,
      subLentNFT?: null,
    ): AssociatedNFTsEventFilter

    'FeesBasisPointsChanged(uint16)'(
      basisPoints?: null,
    ): FeesBasisPointsChangedEventFilter
    FeesBasisPointsChanged(
      basisPoints?: null,
    ): FeesBasisPointsChangedEventFilter

    'FeesCollectorChanged(address)'(
      feeCollector?: null,
    ): FeesCollectorChangedEventFilter
    FeesCollectorChanged(feeCollector?: null): FeesCollectorChangedEventFilter

    'Initialized(uint8)'(version?: null): InitializedEventFilter
    Initialized(version?: null): InitializedEventFilter

    'Paused(address)'(account?: null): PausedEventFilter
    Paused(account?: null): PausedEventFilter

    'RentalEnded(address,address,address,uint256)'(
      lender?: string | null,
      tenant?: string | null,
      token?: null,
      tokenId?: null,
    ): RentalEndedEventFilter
    RentalEnded(
      lender?: string | null,
      tenant?: string | null,
      token?: null,
      tokenId?: null,
    ): RentalEndedEventFilter

    'RentalOfferCancelled(uint256,address)'(
      nonce?: BigNumberish | null,
      maker?: string | null,
    ): RentalOfferCancelledEventFilter
    RentalOfferCancelled(
      nonce?: BigNumberish | null,
      maker?: string | null,
    ): RentalOfferCancelledEventFilter

    'RentalOfferCreated(uint256,address,address,tuple[],address,uint256,uint256)'(
      nonce?: BigNumberish | null,
      maker?: string | null,
      taker?: null,
      nfts?: null,
      feeToken?: null,
      feeAmount?: null,
      deadline?: null,
    ): RentalOfferCreatedEventFilter
    RentalOfferCreated(
      nonce?: BigNumberish | null,
      maker?: string | null,
      taker?: null,
      nfts?: null,
      feeToken?: null,
      feeAmount?: null,
      deadline?: null,
    ): RentalOfferCreatedEventFilter

    'RentalStarted(uint256,address,address,address,uint256,uint64,uint16,uint256,uint256)'(
      nonce?: BigNumberish | null,
      lender?: string | null,
      tenant?: string | null,
      token?: null,
      tokenId?: null,
      duration?: null,
      basisPoints?: null,
      start?: null,
      end?: null,
    ): RentalStartedEventFilter
    RentalStarted(
      nonce?: BigNumberish | null,
      lender?: string | null,
      tenant?: string | null,
      token?: null,
      tokenId?: null,
      duration?: null,
      basisPoints?: null,
      start?: null,
      end?: null,
    ): RentalStartedEventFilter

    'RequestToEndRentalPrematurely(address,address,uint256)'(
      requester?: string | null,
      token?: string | null,
      tokenId?: BigNumberish | null,
    ): RequestToEndRentalPrematurelyEventFilter
    RequestToEndRentalPrematurely(
      requester?: string | null,
      token?: string | null,
      tokenId?: BigNumberish | null,
    ): RequestToEndRentalPrematurelyEventFilter

    'RoleAdminChanged(bytes32,bytes32,bytes32)'(
      role?: BytesLike | null,
      previousAdminRole?: BytesLike | null,
      newAdminRole?: BytesLike | null,
    ): RoleAdminChangedEventFilter
    RoleAdminChanged(
      role?: BytesLike | null,
      previousAdminRole?: BytesLike | null,
      newAdminRole?: BytesLike | null,
    ): RoleAdminChangedEventFilter

    'RoleGranted(bytes32,address,address)'(
      role?: BytesLike | null,
      account?: string | null,
      sender?: string | null,
    ): RoleGrantedEventFilter
    RoleGranted(
      role?: BytesLike | null,
      account?: string | null,
      sender?: string | null,
    ): RoleGrantedEventFilter

    'RoleRevoked(bytes32,address,address)'(
      role?: BytesLike | null,
      account?: string | null,
      sender?: string | null,
    ): RoleRevokedEventFilter
    RoleRevoked(
      role?: BytesLike | null,
      account?: string | null,
      sender?: string | null,
    ): RoleRevokedEventFilter

    'SubletEnded(address,address,address,uint256)'(
      lender?: string | null,
      tenant?: string | null,
      token?: null,
      tokenId?: null,
    ): SubletEndedEventFilter
    SubletEnded(
      lender?: string | null,
      tenant?: string | null,
      token?: null,
      tokenId?: null,
    ): SubletEndedEventFilter

    'SubletStarted(address,address,address,uint256,uint16)'(
      lender?: string | null,
      tenant?: string | null,
      token?: null,
      tokenId?: null,
      basisPoints?: null,
    ): SubletStartedEventFilter
    SubletStarted(
      lender?: string | null,
      tenant?: string | null,
      token?: null,
      tokenId?: null,
      basisPoints?: null,
    ): SubletStartedEventFilter

    'Unpaused(address)'(account?: null): UnpausedEventFilter
    Unpaused(account?: null): UnpausedEventFilter
  }

  estimateGas: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>

    FEES_MANAGER_ROLE(overrides?: CallOverrides): Promise<BigNumber>

    MAX_BASIS_POINTS(overrides?: CallOverrides): Promise<BigNumber>

    PAUSER_ROLE(overrides?: CallOverrides): Promise<BigNumber>

    SIGNATURE_VERSION(overrides?: CallOverrides): Promise<BigNumber>

    SIGNING_DOMAIN(overrides?: CallOverrides): Promise<BigNumber>

    TOKENS_MANAGER_ROLE(overrides?: CallOverrides): Promise<BigNumber>

    associateOriginalToLentAndBorrowedNFT(
      originalNFT: string,
      lentNFT: string,
      borrowedNFT: string,
      subLentNFT: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    cancelRentalOffer(
      nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    endRental(
      token: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    endRentalPrematurely(
      token: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    endRentalPrematurelyRequests(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    endSublet(
      token: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    feesCollector(overrides?: CallOverrides): Promise<BigNumber>

    getFeesTable(
      token: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<BigNumber>

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    hashRentalOffer(
      offer: IRentalProtocol.RentalOfferStruct,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    initialize(
      _feesCollector: string,
      feesBasisPoints: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    invalidNonce(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    originalToBorrowedNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    originalToLentNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    originalToSubLendNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    pause(
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    paused(overrides?: CallOverrides): Promise<BigNumber>

    preSignRentalOffer(
      offer: IRentalProtocol.RentalOfferStruct,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    preSignedOffer(
      arg0: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    protocolFeeBasisPoints(overrides?: CallOverrides): Promise<BigNumber>

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    rent(
      offer: IRentalProtocol.RentalOfferStruct,
      signatureType: BigNumberish,
      signature: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    rentals(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    setFeesBasisPoints(
      basisPoints: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    setFeesCollector(
      _feesCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    sublet(
      token: string,
      tokenId: BigNumberish,
      subtenant: string,
      basisPoints: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>
  }

  populateTransaction: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>

    FEES_MANAGER_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>

    MAX_BASIS_POINTS(overrides?: CallOverrides): Promise<PopulatedTransaction>

    PAUSER_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>

    SIGNATURE_VERSION(overrides?: CallOverrides): Promise<PopulatedTransaction>

    SIGNING_DOMAIN(overrides?: CallOverrides): Promise<PopulatedTransaction>

    TOKENS_MANAGER_ROLE(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    associateOriginalToLentAndBorrowedNFT(
      originalNFT: string,
      lentNFT: string,
      borrowedNFT: string,
      subLentNFT: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    cancelRentalOffer(
      nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    endRental(
      token: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    endRentalPrematurely(
      token: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    endRentalPrematurelyRequests(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    endSublet(
      token: string,
      tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    feesCollector(overrides?: CallOverrides): Promise<PopulatedTransaction>

    getFeesTable(
      token: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    hashRentalOffer(
      offer: IRentalProtocol.RentalOfferStruct,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    initialize(
      _feesCollector: string,
      feesBasisPoints: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    invalidNonce(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    originalToBorrowedNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    originalToLentNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    originalToSubLendNFT(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    pause(
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>

    preSignRentalOffer(
      offer: IRentalProtocol.RentalOfferStruct,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    preSignedOffer(
      arg0: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    protocolFeeBasisPoints(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    rent(
      offer: IRentalProtocol.RentalOfferStruct,
      signatureType: BigNumberish,
      signature: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    rentals(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    setFeesBasisPoints(
      basisPoints: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    setFeesCollector(
      _feesCollector: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    sublet(
      token: string,
      tokenId: BigNumberish,
      subtenant: string,
      basisPoints: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    unpause(
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>
  }
}
